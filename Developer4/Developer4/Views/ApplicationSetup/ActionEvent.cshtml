@model SharedAssemblies.Models.EventGet

@{
    ViewBag.Title = ViewBag.Page;

    string formAction = "";
    if (ViewBag.Page == "Add Event") { formAction = "AddEvent"; }
    else { formAction = "UpdateEvent"; }
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <form asp-action="@formAction" method="post">
                    <div class="card-body">
                        <h4 class="header-title">@ViewBag.Page</h4>
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)
                        <div class="form-group">
                            @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "col-form-label" }) <label class="text-danger">*</label>
                            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.EventName) } })
                            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-form-label" }) <label class="text-danger">*</label>
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.Description) } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "col-form-label" }) <label class="text-danger">*</label>
                            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.Location) } })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.LocationDetails, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.LocationDetails, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.LocationDetails) } })
                            @Html.ValidationMessageFor(model => model.LocationDetails, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "col-form-label" }) <label class="text-danger">*</label>
                            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @placeholder = "Minutes Exp: 60" } })
                            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ForwardingWebAddress, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.ForwardingWebAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.ForwardingWebAddress) } })
                            @Html.ValidationMessageFor(model => model.ForwardingWebAddress, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmationMsgFooter, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.ConfirmationMsgFooter, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.ConfirmationMsgFooter) } })
                            @Html.ValidationMessageFor(model => model.ConfirmationMsgFooter, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CancellationMsgFooter, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.CancellationMsgFooter, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.CancellationMsgFooter) } })
                            @Html.ValidationMessageFor(model => model.CancellationMsgFooter, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "col-form-label" }) <label class="text-danger">*</label>
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control text-right", @placeholder = Html.DisplayNameFor(model => model.Price) } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.HiddenFor(model => model.Active)
                            <div class="custom-control custom-switch">
                                @{ 
                                    var activeChecked = Model.Active == 1 ? " checked==\"checked\"" : "";
                                }
                                <input type="checkbox" class="custom-control-input" onchange=isActive() id="chkActive" @activeChecked />
                                <label class="custom-control-label" for="chkActive">@Html.DisplayNameFor(model => model.Active)</label>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BlockedDaysForwardID, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownList("BlockedDaysForwardID", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-0">
                            <button type="submit" class="btn btn-info waves-effect waves-light"><i class="fa fa-check"></i> Save</button>
                            @if (ViewBag.Page == "Update Event")
                            {
                                <a id="btnDelete" class="btn btn-danger waves-effect waves-light text-white">Delete</a>
                            }
                            <a href="~/ApplicationSetup/Events" class="btn btn-dark waves-effect waves-light">Cancel</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            if ($("#Active").val() == 1) { $("#chkActive").prop("checked", true); }
            else { $("#chkActive").prop("checked", false); }

            isActive();
        });

        function isActive() {
            if ($("#chkActive").is(":checked")) { $("#Active").val(1); }
            else { $("#Active").val(0); }
        }
    </script>

    @if (ViewBag.Page == "Update Event")
    {
        <script type="text/javascript">
            $('#btnDelete').click(function () {
                var confMsg = confirm("Are you sure you want to delete this event?");
                if (confMsg == true) {
                    var url = '@Url.Content("~/")' + "ApplicationSetup/DeleteEvent";
                    $.post(url, { id: $("#ID").val() }, function (data) {
                        if (data != true) {
                            formilaeAlert("Could not delete the event. Please try again and contact the web administrator if this problem persists.");
                        }
                        else {
                            window.location.href = '@Url.Content("~/")' + "ApplicationSetup/Events";
                        }
                    });
                }
            });
        </script>
    }
}
